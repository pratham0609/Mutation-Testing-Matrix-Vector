<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="linearalgebra.VectorTest" time="0.001" tests="47" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/pratham/ST project/ST-Project/target/test-classes:/home/pratham/ST project/ST-Project/target/classes:/home/pratham/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/pratham/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Linux"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/pratham/ST project/ST-Project/target/surefire/surefirebooter1347087130695611312.jar /home/pratham/ST project/ST-Project/target/surefire 2023-11-26T22-22-47_439-jvmRun1 surefire5003376136555770429tmp surefire_0365945483595495896tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/pratham/ST project/ST-Project/target/test-classes:/home/pratham/ST project/ST-Project/target/classes:/home/pratham/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/pratham/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/pratham"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-08-24"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/pratham/ST project/ST-Project"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/home/pratham/ST project/ST-Project/target/surefire/surefirebooter1347087130695611312.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.20.1+1-post-Ubuntu-0ubuntu122.04"/>
    <property name="user.name" value="pratham"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.0-37-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/pratham/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="11.0.20.1"/>
    <property name="user.dir" value="/home/pratham/ST project/ST-Project"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="java.vm.version" value="11.0.20.1+1-post-Ubuntu-0ubuntu122.04"/>
    <property name="java.specification.maintenance.version" value="2"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testAngleRadians" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testOrthogonalProjection" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testPNormException" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testAdd" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testDot" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCheckLengthsPositive" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSubtract" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testVectorConstructor1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testVectorConstructor2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testAngleDegrees" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testIdentityVector" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCheckLengthsNegative" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCross" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testPNorm" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testGet1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testGet2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testGet3" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSet1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSet2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSet3" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testToString" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testLinearCombination" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testGetEntries1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testGetEntries2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testScalarTripleProduct" classname="linearalgebra.VectorTest" time="0.001"/>
  <testcase name="testOrthogonalProjectionException" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testInverseVector1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testInverseVector2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testIsCanonicalBasisVectorPositive" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testIsCanonicalBasisVectorNegative" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCopyConstructor1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCopyConstructor2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSetEntries" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testIsZeroPositive" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCrossException1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testCrossException2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testNormalize" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testIsZeroNegative" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSetException1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testSetException2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testNormalizeException" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testMagnitude1" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testMagnitude2" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testLinearCombinationException" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testMultiply" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testLength" classname="linearalgebra.VectorTest" time="0"/>
  <testcase name="testOuterProduct" classname="linearalgebra.VectorTest" time="0"/>
</testsuite>